Superior Room
Our generous Superior Rooms boast an average 32 sqm / 344 sqf of space.
Classic style blends beautifully with contemporary elegance and amenities. Sleep soundly in a sumptuous queen size bed with crisp linens and refresh in the white Italian marble bathroom with its deep bath and White Company toiletries. This luxurious room is well beyond what one might consider standard

Deluxe Room
Spacious Deluxe Rooms boast an average 36 sqm / 387sq ft. Contemporary luxury and amenities combine with elegant classic style. The large King size bed with crisp linens ensure a peaceful night’s sleep. Elegantly designed bathrooms feature sleek white Italian marble, a convenient walk-in shower and separate bath. Simply relax in pure comfort, and pamper yourself with a cosy bathrobe and White Company toiletries.

Executive Room
Indulge in a luxurious and spacious Executive room, with an average 50 sqm/560sq ft, is one of our most spacious accommodations. Relax in the generous seating area with comfortable sofa and armchairs or work peacefully at the practical desk. A sumptuous King size bed with crisp linens will ensure a soothing sleep whilst the sleek white Italian marble bathroom with its walk-in shower and separate bath is perfect for pampering yourself with White Company toiletries.



lama dev booking app source code github
lama dev booking app source code
https://github.com/safak/youtube2022/tree/mern-booking


//todo
room numbers are not unique when you update them
fix issue in backends

primary color: #A49169

//todo
create an image carousel for images to display


app url
https://kf-hotel-booking-app.onrender.com/


import "./booking.scss";
import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { useDispatch } from "react-redux";
import { useNavigate } from "react-router-dom";
import { useSelector } from "react-redux";
import { createBooking, reset } from "../../features/Booking/bookingSlice";
import { getRoom } from "../../utils/helper";
import Carousel from "../../components/Carousel/Carousel";

const Booking = () => {
  const { id: roomId } = useParams();
  const dispatch = useDispatch();
  const navigate = useNavigate();

  const { isSuccess } = useSelector((state) => state.booking);

  const [room, setRoom] = useState(null);
  const [formData, setFormData] = useState({
    name: "test test",
    email: "test@gmail.com",
    checkIn: "2024-01-12",
    checkOut: "2024-01-13",
  });

  const { name, email, checkIn, checkOut } = formData;

  useEffect(() => {
    const getRoomData = async () => {
      try {
        const data = await getRoom(roomId);
        setRoom(data);
      } catch (error) {}
    };

    getRoomData();
  }, []);

  useEffect(() => {
    if (isSuccess) {
      navigate("/rooms");
      dispatch(reset());
    }
  }, [isSuccess]);

  const handleChange = (e) => {
    setFormData((prevState) => ({
      ...prevState,
      [e.target.name]: e.target.value,
    }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    const dataToSubmit = {
      roomId,
      name,
      email,
      checkIn,
      checkOut,
    };

    dispatch(createBooking(dataToSubmit));
  };

  console.log(isSuccess);
  return (
    <div id="booking">
      {room ? (
        <div id="booking">
          {/* carousel */}
          <Carousel data={room.img} title={room.name} />

          <div className="col-wrapper">
            <div className="col">
              <div className="text-wrapper">
                <p> {room.desc} </p>
                <h2> £{room.price.toFixed(2)} </h2>
              </div>
            </div>
            <div className="form-wrapper">
              <h1 className="heading">Book Now</h1>
              <form onSubmit={handleSubmit}>
                <div className="input-group">
                  <label htmlFor="name">Name</label>
                  <input
                    type="text"
                    name="name"
                    placeholder="Enter Name"
                    value={name}
                    onChange={handleChange}
                  />
                </div>

                <div className="input-group">
                  <label htmlFor="Email">Email</label>
                  <input
                    type="text"
                    name="email"
                    placeholder="Enter Email"
                    value={email}
                    onChange={handleChange}
                  />
                </div>

                <div className="input-group">
                  <label htmlFor="checkIn">Check In</label>
                  <input
                    type="date"
                    name="checkIn"
                    value={checkIn}
                    onChange={handleChange}
                  />
                </div>

                <div className="input-group">
                  <label htmlFor="checkOut">Check Out</label>
                  <input
                    type="date"
                    name="checkOut"
                    value={checkOut}
                    onChange={handleChange}
                  />
                </div>

                <div className="input-group">
                  <button type="submit">Submit</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      ) : (
        <div>
          {" "}
          <h1 className="heading">Room not found</h1>{" "}
        </div>
      )}
    </div>
  );
};

export default Booking;
